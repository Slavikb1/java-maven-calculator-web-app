name: DevSecOps
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]

env:
  version: ${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: echo "repo fetched"
      - run: ls -a
      
  depchecktest:
    runs-on: ubuntu-latest
    name: depecheck_test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build project with Maven
        run: mvn clean install
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --failOnCVSS 7
            --enableRetired
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports

           
      # - name: Bump Version
      #   run: mvn versions:set -DnewVersion=1.0.$version


#      - name: Build image
#        run: docker build -t mavenproj .

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_PASS }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     build-args: VERSION=${{ env.version }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_USER }}/maven_project:${{ env.version }} , ${{ secrets.DOCKER_USER }}/maven_project:latest

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_USER }}
  #         aws-secret-access-key: ${{ secrets.AWS_PASS }}
  #         aws-region: eu-central-1

  #     - name: Terraform init and apply
  #       run: |
  #         cd terraform
  #         terraform init
  #         terraform fmt
  #         terraform destroy -auto-approve
  #         terraform apply -auto-approve
# ------
# # This workflow will build a Java project with Maven
# # For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# name: Java CI with Maven

# on:
#   push:
#     branches: [ master ]
#   # pull_request:
#   #   branches: [ master ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
